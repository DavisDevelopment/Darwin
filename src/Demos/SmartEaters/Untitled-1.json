{
    "params": {
        "elite_count": 5,
        "elite_copies": 2,
        "ticks_per_gen": 2000,
        "population_size": 100,
        "food_count": 120,
        "crossover_method": 1,
        "wrap_borders": true,
        "mutation_rate": 0.02,
        "hidden_layers_sizes": [8],
        "crossover_rate": 0.7,
        "max_speed": 2,
        "max_turn_rate": 0.3,
        "eater_size": 12,
        "food_size": 5
    },
    "brain": function anonymous(inputs) {

        var json = {
            "weights_and_biases": [0.10479192928779701, -0.09040648540793006, -0.8129632631719197, -0.5290760101258378, 0.3574086483874015, 0.2104096515916103, 0.7126376446341749, -0.76019945795665, -0.5165662646985094, -0.9062494097720877, 0.38782179380747683, -0.6042874911698553, 0.9356375827925585, -0.3799270296198869, -0.5908094523603791, 0.15389535627122486, 0.1219647306073357, -0.443228874900953, 0.47534262016663487, -0.8945720280659613, -0.17608097864703076, 0.5730568592602352, -0.0065803834884343715, 0.8284309771695386, 0.02775099005992132, -0.106034252872373, -0.6351828879485981, 0.48856136420420393, 0.7419932622090757, -0.4533421643705382, -0.8314961059349408, -0.6325927978088886, 0.5669057239101001, -0.43648846474306824, 0.8647883962852654, -0.7297164164166934, 0.49069749089015824, 0.9833115055621868, 0.9037026620887465, -0.898550031190231, -0.37130601782104744, -0.4135358113991412, 0.9393098087276863, -0.979627443762082, 0.3127022559274524, 0.20956020086206806, 0.9045836339828672, 0.1120242842489545, 0.04563616987779984, 0.069481495205435, -0.9295287093025273, 0.929193607583799, -0.7712598120060519, 0.7034848198644084, 0.23982080257884064, -0.38948701823823173, 0.6248653227695335, -0.3993371005777617],
            "layers": [4, 8, 2]
        };

        if (inputs.length !== json.layers[0])
            throw new Error('Expected ' + json.layers[0] + ' inputs, got ' + inputs.length + '.');

        var offsets = [0, 36],
            a = inputs,
            output;

        for (var l = 1; l < json.layers.length; l++) {
            output = [];
            for (var j = 0; j < json.layers[l]; j++) {
                var z = json.weights_and_biases[offsets[l - 1] + j * (json.layers[l - 1] + 1)];
                for (var k = 0; k < json.layers[l - 1]; k++)
                    z += json.weights_and_biases[offsets[l - 1] + j * (json.layers[l - 1] + 1) + k + 1] * a[k];
                output[j] = 1 / (1 + Math.exp(-z));
            }
            a = output;
        }

        return output;

    }
}