!function(t){var e={};function s(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)s.d(i,n,function(e){return t[e]}.bind(null,n));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=2)}([function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.SINGLE_POINT=0]="SINGLE_POINT",t[t.TWO_POINT=1]="TWO_POINT",t[t.UNIFORM=2]="UNIFORM",t[t.HALF_UNIFORM=3]="HALF_UNIFORM",t[t.ORDERED=4]="ORDERED"}(e.CrossoverMethod||(e.CrossoverMethod={}))},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.FLIP=0]="FLIP",t[t.SWAP=1]="SWAP"}(e.MutationMethod||(e.MutationMethod={}))},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(3),n=document.createElement("canvas"),o=n.getContext("2d"),r=window.devicePixelRatio;n.width=window.innerWidth*r,n.height=window.innerHeight*r,n.style.width=`${window.innerWidth}px`,n.style.height=`${window.innerHeight}px`,o.scale(r,r),document.body.style.padding="0",document.body.style.margin="0",document.body.appendChild(n);const h=[];for(let t=0;t<40;t++)h.push({x:Math.floor(Math.random()*n.width),y:Math.floor(Math.random()*n.height)});const a=new i.TSPOptimizer(h),l=a.optimize(),u=()=>{const t=l.next();a.drawShortestPath(o),t.done||requestAnimationFrame(u)};u(),a.drawShortestPath(o)},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(4),n=s(1),o=s(8),r=s(0),h=s(9);e.TSPOptimizer=class{constructor(t=[]){this.shuffled=[],this.model=[],this.convergence_threshold=30,this.max_generation=5e3,this.fitness_k=15,this.CITY_COUNT=t.length,this.tsp=new o.TSP(t);for(let t=0;t<this.CITY_COUNT;t++)this.model[t]=t;this.genetics=new i.Darwin({population_size:500,chromosome_length:this.CITY_COUNT,rand_gene:(()=>(0===this.shuffled.length&&(this.shuffled=h.shuffle(this.model)),this.shuffled.pop())).bind(this),crossover_method:r.CrossoverMethod.ORDERED,mutation_method:n.MutationMethod.SWAP,elite_count:5});let e=t.reduce((t,e)=>t>e.x?t:e.x,0),s=t.reduce((t,e)=>t>e.y?t:e.y,0);this.fitness_k*=function(t,e){const s=Math.pow(t,2),i=Math.pow(t,3),n=Math.pow(e,2),o=Math.pow(e,3),r=Math.pow(s+n,.5);return 1/15*(i/n+o/s+r*(3-s/n-n/s)+2.5*(n/t*Math.log((t+r)/e)+s/e*Math.log((e+r)/t)))}(e,s)*this.CITY_COUNT,this.best_path=this.genetics.getFittest().getGenes()}pathFitness(t){return Math.pow(2,this.fitness_k/this.tsp.distance(t))}distanceFromFitness(t){return this.fitness_k/Math.log2(t)}newGen(){this.genetics.updateFitness(t=>this.pathFitness(t)),this.genetics.mate()}*optimize(){let t=1/0,e=0;for(;this.genetics.getGeneration()!==this.max_generation&&e!==this.convergence_threshold;){this.newGen();const s=this.genetics.getFittest(),i=this.tsp.distance_squared(s.getGenes());i>=t?e++:(t=i,this.best_path=[...s.getGenes()],e=0),yield this.best_path}return this.best_path}drawShortestPath(t){this.tsp.draw(t,this.best_path),t.fillStyle="black",t.fillText(`generation : ${this.genetics.getGeneration()}`,5,15),t.fillText(`avg dist : ${this.distanceFromFitness(this.genetics.getAverageFitness()).toFixed(0)}`,5,30)}getGeneration(){return this.genetics.getGeneration()}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(5),n=s(0),o=s(1),r=s(7);e.Darwin=class{constructor(t){this.population=[],this.generation=0;const e=()=>{this.stats.needs_update=!0};for(let s=0;s<t.population_size;s++){const s=new i.Chromosome(t.chromosome_length,t.rand_gene);s.on("update_fitness",e),this.population.push(s)}this.params=Object.assign({crossover_rate:.7,mutation_rate:1/t.population_size,crossover_method:n.CrossoverMethod.SINGLE_POINT,mutation_method:o.MutationMethod.FLIP,elite_count:Math.ceil(t.population_size/25),elite_copies:1},t),this.stats={fittest:this.population[0],avg_fitness:0,sum_fitness:0,fittest_idx:0,needs_update:!0}}duplicateElite(t){const{elite_count:e,elite_copies:s}=this.params;if(e>0){const i=this.getTopChromosomes(e);t.push(...i);for(let n=0;n<e;n++)for(let e=0;e<s;e++)t.push(i[n].clone())}}crossover(t){const{population_size:e,crossover_rate:s,crossover_method:n,rand_gene:o}=this.params;for(;t.length<e;)if(Math.random()<s){const e=this.getRandomChromosome(),s=this.getRandomChromosome(),{baby1:r,baby2:h}=e.crossover(s,n);t.push(new i.Chromosome(r,o),new i.Chromosome(h,o))}this.params.population_size%2==1&&t.pop()}mutate(t){for(const e of t)e.mutate(this.params.mutation_rate,this.params.mutation_method)}updateFitness(t){for(const e of this.population)e.setFitness(t(e.getGenes()));this.stats.needs_update=!0}mate(){const t=[];this.duplicateElite(t),this.crossover(t),this.mutate(t),this.population=t,this.generation++,this.updateStats(!0)}getPopulation(){return this.population}getChromosome(t){return this.population[t]}getRandomChromosome(){if(this.updateStats(),0===this.stats.sum_fitness)return this.population[Math.floor(Math.random()*this.population.length)];const t=Math.random()*this.stats.sum_fitness;let e=0;for(let s=0;s<this.population.length;s++)if((e+=this.population[s].getFitness())>t)return this.population[s];return this.population[0]}getTopChromosomes(t){return r.selectKBest(this.population,t)}getAverageFitness(){return this.updateStats(),this.stats.avg_fitness}getFittest(){return this.updateStats(),this.stats.fittest}getParams(){return this.params}getGeneration(){return this.generation}getStats(){return this.stats}updateStats(t=!1){if(t||this.stats.needs_update){let t=0,e=0,s=0;for(let i=0;i<this.population.length;i++){const n=this.population[i].getFitness();t+=n,n>e&&(e=n,s=i)}this.stats.sum_fitness=t,this.stats.avg_fitness=t/this.params.population_size,this.stats.fittest=this.population[s].clone(),this.stats.fittest_idx=s,this.stats.needs_update=!1}}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(0),n=s(6),o=s(1);class r extends n.default{constructor(t,e){if(super(),this.genes=[],this.fitness=0,this.rand_gene=e,"number"==typeof t){this.length=t;for(let t=0;t<this.length;t++)this.genes.push(e())}else this.genes=t,this.length=t.length}getFitness(){return this.fitness}setFitness(t){this.fitness=t,this.emit("update_fitness",t)}compare(t){let e=0;for(let s=0;s<Math.min(this.length,t.length);s++)e+=this.genes[s]!==t.genes[s]?1:0;return e}mutate_flip(t){for(let e=0;e<this.length;e++)Math.random()<t&&(this.genes[e]=this.rand_gene())}mutate_swap(t){for(let e=0;e<this.length;e++)if(Math.random()<t){const t=Math.floor(Math.random()*this.length),s=this.genes[e];this.genes[e]=this.genes[t],this.genes[t]=s}}mutate(t=1/this.length,e){if("number"==typeof e)switch(e){case o.MutationMethod.FLIP:this.mutate_flip(t);break;case o.MutationMethod.SWAP:this.mutate_swap(t)}else this.setGenes(e(this.getGenes()))}crossover_single_point(t){const e=Math.floor(Math.random()*this.length);return{baby1:[...this.genes.slice(0,e),...t.genes.slice(e)],baby2:[...t.genes.slice(0,e),...this.genes.slice(e)]}}crossover_two_point(t){const e=[],s=[];let i=Math.floor(Math.random()*this.length),n=Math.floor(Math.random()*this.length);i>n&&([i,n]=[n,i]);for(let o=0;o<this.length;o++)e.push(o<i?this.genes[o]:o<n?t.genes[o]:this.genes[o]),s.push(o<i?t.genes[o]:o<n?this.genes[o]:t.genes[o]);return{baby1:e,baby2:s}}crossover_uniform(t){const e=[],s=[];for(let i=0;i<this.length;i++){let n=Math.random()<.5;e.push(n?t.genes[i]:this.genes[i]),s.push(n?this.genes[i]:t.genes[i])}return{baby1:e,baby2:s}}crossover_half_uniform(t){let e=[],s=[],i=[];for(let e=0;e<this.length;e++)this.genes[e]!==t.genes[e]&&i.push(e);let n=i.length;e=this.genes.slice(),s=t.genes.slice();for(let o=0;o<n/2;o++){let n=Math.floor(Math.random()*i.length);e[i[n]]=t.genes[i[n]],s[i[n]]=this.genes[i[n]],i.splice(n,1)}return{baby1:e,baby2:s}}crossover_ordered(t){const e=[],s=[];let i=Math.floor(Math.random()*this.length),n=Math.floor(Math.random()*this.length),o=i;i=Math.min(i,n),n=Math.max(o,n);for(let o=i;o<n;o++)e[o]=i<=o&&o<=n?t.genes[o]:void 0,s[o]=i<=o&&o<=n?this.genes[o]:void 0;for(let i=0;i<this.length;i++){if(-1===e.indexOf(this.genes[i]))e[i]=this.genes[i];else for(let t=0;t<this.length;t++)-1===e.indexOf(this.genes[t])&&(e[i]=this.genes[t]);if(-1===s.indexOf(t.genes[i]))s[i]=t.genes[i];else for(let e=0;e<this.length;e++)-1===s.indexOf(t.genes[e])&&(s[i]=t.genes[e])}return{baby1:e,baby2:s}}crossover(t,e){if("number"==typeof e)switch(e){case i.CrossoverMethod.SINGLE_POINT:return this.crossover_single_point(t);case i.CrossoverMethod.TWO_POINT:return this.crossover_two_point(t);case i.CrossoverMethod.UNIFORM:return this.crossover_uniform(t);case i.CrossoverMethod.HALF_UNIFORM:return this.crossover_half_uniform(t);case i.CrossoverMethod.ORDERED:return this.crossover_ordered(t);default:throw new Error(`Unimplemented CrossoverMethod: ${e} (${i.CrossoverMethod[e]})`)}return e(t)}setGenes(t){this.genes=[...t]}getGenes(){return this.genes}copy(t){this.genes=t.genes.slice(),this.rand_gene=t.rand_gene,this.fitness=t.fitness}clone(){let t=new r(this.length,this.rand_gene);return t.copy(this),t}}e.Chromosome=r},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.event_handlers=new Map}on(t,e){this.isListening(t)||this.event_handlers.set(t,[]),this.event_handlers.get(t).push(e)}isListening(t){return this.event_handlers.has(t)}emit(t,e,s){if(this.isListening(t))for(const i of this.event_handlers.get(t))i.call(s,e)}bindEvent(t,e){t.on(e,t=>this.emit(e,t))}removeListener(t){this.event_handlers.delete(t)}removeListeners(){this.event_handlers.clear()}}},function(t,e,s){"use strict";function i(t,e=0,s=t.length-1){const o=t[Math.floor((e+s)/2)].getFitness();if(e<s){const r=n(t,e,s,o);i(t,e,r-1),i(t,r,s)}}function n(t,e,s,i){for(;e<=s;){for(;t[e].getFitness()>i;)e++;for(;t[s].getFitness()<i;)s--;e<=s&&([t[e],t[s]]=[t[s],t[e]],e++,s--)}return e}Object.defineProperty(e,"__esModule",{value:!0}),e.selectKBest=function(t,e){return function(t,e,s=0,o=t.length-1){const r=t[Math.floor((s+o)/2)].getFitness();if(s<o){const h=n(t,s,o,r);i(t,s,h-1),h<e&&i(t,h,o)}}(t,e),t.slice(0,e)}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.TSP=class{constructor(t){this.cities=t,this.dist_map=new Map}dist2D(t,e){return Math.pow(this.dist2D_squared(t,e),.5)}dist2D_squared(t,e){let s,i;e>t?(s=t,i=e):(s=e,i=t);const n=`${s}->${i}`;if(this.dist_map.has(n))return this.dist_map.get(n);{let s=this.cities[t],i=this.cities[e];const o=Math.pow(s.x-i.x,2)+Math.pow(s.y-i.y,2);return this.dist_map.set(n,o),o}}checkPathValidity(t){if(t.length!==this.cities.length)return!1;let e=t.slice().sort(),s=e[0];for(let t=1;t<e.length;t++){if(s===e[t])return!1;s=e[t]}return!0}distance(t){if(!this.checkPathValidity(t))throw new Error("Invalid path: Each city must be visited exactly once.");let e=0;for(let s=1;s<t.length;s++)e+=this.dist2D(t[s-1],t[s]);return e}distance_squared(t){if(!this.checkPathValidity(t))throw new Error("Invalid path: Each city must be visited exactly once.");let e=0;for(let s=1;s<t.length;s++)e+=this.dist2D_squared(t[s-1],t[s]);return e}getCities(){return this.cities}getCity(t){return this.cities[t]}draw(t,e){if(e.length!==this.cities.length)throw new Error("Each city must be visited");t.clearRect(0,0,t.canvas.width,t.canvas.height);const s=window.devicePixelRatio;t.strokeStyle="#555555",t.lineWidth=2;for(let i=1;i<e.length;i++)t.beginPath(),t.moveTo(this.cities[e[i-1]].x/s,this.cities[e[i-1]].y/s),t.lineTo(this.cities[e[i]].x/s,this.cities[e[i]].y/s),t.closePath(),t.stroke();t.fillStyle="#01cc33";for(const e of this.cities)t.beginPath(),t.arc(e.x/s,e.y/s,4,0,2*Math.PI),t.closePath(),t.fill()}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.shuffle=function(t){const e=[...t];for(let t=e.length-1;t>0;t--){const s=Math.floor(Math.random()*(t+1));[e[t],e[s]]=[e[s],e[t]]}return e}}]);