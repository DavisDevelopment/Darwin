!function(t){var e={};function s(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)s.d(i,o,function(e){return t[e]}.bind(null,o));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=3)}([function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.SINGLE_POINT=0]="SINGLE_POINT",t[t.TWO_POINT=1]="TWO_POINT",t[t.UNIFORM=2]="UNIFORM",t[t.HALF_UNIFORM=3]="HALF_UNIFORM",t[t.ORDERED=4]="ORDERED"}(e.CrossoverMethod||(e.CrossoverMethod={}))},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.FLIP=0]="FLIP",t[t.SWAP=1]="SWAP"}(e.MutationMethod||(e.MutationMethod={}))},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.clamp=((t,e,s)=>t>=e&&t<=s?t:t<e?e:s),t.map=((t,e,s,i,o)=>(t-e)/(s-e)*(o-i)+i),t.TWO_PI=2*Math.PI}(e.MathUtils||(e.MathUtils={}))},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(0),o=s(4),n=document.createElement("canvas");n.width=window.innerWidth*o.DPR,n.height=window.innerHeight*o.DPR,n.style.width=`${window.innerWidth}px`,n.style.height=`${window.innerHeight}px`,n.getContext("2d").scale(o.DPR,o.DPR),document.body.style.padding="0",document.body.style.margin="0",document.body.appendChild(n);const r=new o.SmartEaters(n,{elite_count:5,elite_copies:2,ticks_per_gen:2e3,population_size:100,food_count:120,crossover_method:i.CrossoverMethod.TWO_POINT,wrap_borders:!0,mutation_rate:.02,hidden_layers_sizes:[8]});r.run(),window.addEventListener("resize",()=>{n.style.width=`${window.innerWidth}px`,n.style.height=`${window.innerHeight}px`,n.width=window.innerWidth*o.DPR,n.height=window.innerHeight*o.DPR,n.getContext("2d").scale(o.DPR,o.DPR)}),window.addEventListener("keypress",t=>{switch(t.key){case" ":r.pause();break;case"f":r.follow_fittest=!r.follow_fittest;break;case"p":r.fast_mode_refresh_rate+=2;break;case"m":r.fast_mode_refresh_rate-=2,r.fast_mode_refresh_rate<1&&(r.fast_mode_refresh_rate=1);break;case"l":r.show_lines=!r.show_lines;break;case"h":r.hide_non_selected=!r.hide_non_selected;break;case"a":if(r.selectedIdx){const t=r.getEaterBrain(r.selectedIdx),e=window.URL.createObjectURL(new Blob([`\n                {\n                    "params": ${JSON.stringify(r.parameters)},\n                    "brain": ${JSON.stringify(t)}\n                }\n                `]));window.open(`analysis.html?b=${e}`)}break;default:r.toggleFastMode()}})},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(0),o=s(5),n=s(9),r=s(10),a=s(11),h=s(2);e.DPR=window.devicePixelRatio;e.SmartEaters=class{constructor(t,s){this.ticks=0,this.follow_fittest=!1,this.paused=!1,this.fast_mode=!1,this.fast_mode_refresh_rate=2,this.show_lines=!1,this.hide_non_selected=!1,this.stop_mating=!1,this.cnv=t,this.ctx=this.cnv.getContext("2d");let l=(t,e)=>null===t||void 0===t?e:t;this.params=s||{},this.params.population_size=this.params.population_size||30,this.params.hidden_layers_sizes=this.params.hidden_layers_sizes||[6],this.params.food_count=this.params.food_count||40,this.params.crossover_rate=l(this.params.crossover_rate,.7),this.params.mutation_rate=l(this.params.mutation_rate,.1),this.params.elite_count=l(this.params.elite_count,4),this.params.elite_copies=l(this.params.elite_copies,1),this.params.max_speed=this.params.max_speed||2,this.params.max_turn_rate=this.params.max_turn_rate||.3,this.params.ticks_per_gen=this.params.ticks_per_gen||1e3,this.params.crossover_method=l(this.params.crossover_method,i.CrossoverMethod.SINGLE_POINT),this.params.eater_size=this.params.eater_size||12,this.params.food_size=this.params.food_size||5,this.params.wrap_borders=l(this.params.wrap_borders,!0),this.layer_sizes=[4,...this.params.hidden_layers_sizes,2],this.brain=new r.NeuralNet,this.genetics=new o.Darwin({population_size:this.params.population_size,rand_func:()=>2*Math.random()-1,chromosome_length:r.NeuralNet.weightsCount(this.layer_sizes)}),this.population=this.genetics.getPopulation().map((t,e)=>new n.Eater(this.randomPos(),Math.random()*h.MathUtils.TWO_PI,e)),this.cnv.addEventListener("click",t=>{const s=new a.Vector2D(t.clientX*e.DPR,t.clientY*e.DPR);let i=0,o=1/0;for(let t=0;t<this.population.length;t++){const e=this.population[t].getPosition().dist_sq(s);e<o&&(o=e,i=t)}Math.pow(o,.5)<2*this.params.eater_size*e.DPR?this.setSelected(i):this.selected_idx=void 0}),this.spawnFood()}spawnFood(){this.food=[];for(let t=0;t<this.params.food_count;t++)this.food.push(this.randomPos())}randomPos(){return a.Vector2D.rand().hadamard([this.cnv.width,this.cnv.height])}getClosestFood(t){let e=0,s=1/0;for(let i=0;i<this.food.length;i++){const o=t.getPosition().dist_sq(this.food[i]);o<s&&(s=o,e=i)}return{index:e,dist:Math.pow(s,.5)}}tick(){if(!this.paused){++this.ticks>this.params.ticks_per_gen&&(this.nextGeneration(),this.ticks=0);for(let t of this.population){const s=this.genetics.getPopulation()[t.getChromosomeIdx()];this.brain.putWeights(this.layer_sizes,s.getBits());const i=this.getClosestFood(t);t.closest_food=a.Vector2D.clone(this.food[i.index]);const[o,n]=this.food[i.index].sub(t.getPosition()).normalize().toArray();if(i.dist<(this.params.eater_size+this.params.food_size)/2){const t=s.getFitness()||1;s.setFitness(2*t),this.food[i.index]=this.randomPos()}const r=[Math.cos(t.getAngle()),Math.sin(t.getAngle())],[l,u]=this.brain.run(...r,o,n),c=h.MathUtils.clamp(l-u,-this.params.max_turn_rate,this.params.max_turn_rate);t.setAngle(t.getAngle()+c),t.lookat=new a.Vector2D(r[0],r[1]),t.food_dir=new a.Vector2D(o,n),t.getPosition().plus(t.lookat.times(this.params.max_speed*e.DPR));let d=t.getPosition();this.params.wrap_borders?(d.x>this.cnv.width&&(d.x=0),d.x<0&&(d.x=this.cnv.width),d.y>this.cnv.height&&(d.y=0),d.y<0&&(d.y=this.cnv.height)):(d.x>this.cnv.width&&(d.x=this.cnv.width),d.x<0&&(d.x=0),d.y>this.cnv.height&&(d.y=this.cnv.height),d.y<0&&(d.y=0))}}}pause(){this.paused=!this.paused}nextGeneration(){if(!this.stop_mating){this.genetics.mate();for(const t of this.genetics.getPopulation())t.setFitness(0);this.spawnFood();for(let t of this.population)t.setPosition(this.randomPos());this.selected_idx=void 0}}run(){let t=()=>{this.tick(),this.render(),this.fast_mode?setTimeout(t,0):requestAnimationFrame(t)};t()}render(){if(this.fast_mode&&this.ticks%this.fast_mode_refresh_rate!=0)return;this.genetics.updateStats(),this.ctx.clearRect(0,0,this.cnv.width,this.cnv.height),this.ctx.fillStyle="rgb(52, 73, 94)";const t=this.params.food_size;for(let s of this.food)this.ctx.beginPath(),this.ctx.fillRect((s.x-t/2)/e.DPR,(s.y-t/2)/e.DPR,t,t),this.ctx.fill();const s=[46,204,113],i=[255,0,0],o=Math.log2(this.genetics.getFittest().getFitness());let n=0;for(let t of this.population){if(this.show_lines){this.ctx.beginPath(),this.ctx.lineWidth=1,this.ctx.strokeStyle="black",this.ctx.moveTo(t.getPosition().x/e.DPR,t.getPosition().y/e.DPR);const s=t.getPosition().add(t.food_dir.times(t.getPosition().dist(t.closest_food)));this.ctx.lineTo(s.x/e.DPR,s.y/e.DPR),this.ctx.stroke()}if(this.hide_non_selected&&this.selected_idx&&n++!==this.selected_idx)continue;const r=Math.log2(this.genetics.getPopulation()[t.getChromosomeIdx()].getFitness());let l=[h.MathUtils.clamp(h.MathUtils.map(r,0,o,s[0],i[0]),Math.min(s[0],i[0]),Math.max(s[0],i[0])),h.MathUtils.clamp(h.MathUtils.map(r,0,o,s[1],i[1]),Math.min(s[1],i[1]),Math.max(s[1],i[1])),h.MathUtils.clamp(h.MathUtils.map(r,0,o,s[2],i[2]),Math.min(s[2],i[2]),Math.max(s[2],i[2]))];this.ctx.lineWidth=4,this.ctx.fillStyle=`rgb(\n                ${Math.floor(l[0])},\n                ${Math.floor(l[1])},\n                ${Math.floor(l[1])}\n            )`,this.ctx.beginPath();let u=t.lookat.times(this.params.eater_size*e.DPR).add(t.getPosition()),c=u.sub(t.getPosition()).angle(),d=Math.PI/1.3,p=new a.Vector2D(Math.cos(c+d),Math.sin(c+d)),_=new a.Vector2D(Math.cos(c-d),Math.sin(c-d)),f=t.getPosition().add(p.times(this.params.eater_size*e.DPR)),m=t.getPosition().add(_.times(this.params.eater_size*e.DPR));this.ctx.moveTo(f.x/e.DPR,f.y/e.DPR),this.ctx.lineTo(u.x/e.DPR,u.y/e.DPR),this.ctx.lineTo(m.x/e.DPR,m.y/e.DPR),this.ctx.fill()}if(this.follow_fittest){const t=this.genetics.getFittest().getFitness();this.selected_idx=this.genetics.getPopulation().findIndex(e=>e.getFitness()===t)}if(this.selected_idx&&!this.hide_non_selected){this.ctx.lineWidth=2,this.ctx.strokeStyle="red",this.ctx.beginPath();const t=this.population[this.selected_idx],s=t.getPosition();this.ctx.arc(s.x/e.DPR,s.y/e.DPR,2*this.params.eater_size,0,h.MathUtils.TWO_PI),this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),this.ctx.lineWidth=1,this.ctx.strokeStyle="black",this.ctx.moveTo(s.x/e.DPR,s.y/e.DPR);const i=s.add(t.food_dir.times(2*this.params.eater_size*e.DPR));this.ctx.lineTo(i.x/e.DPR,i.y/e.DPR),this.ctx.stroke()}const r=0!==this.genetics.getFittest().getFitness()?Math.log2(this.genetics.getFittest().getFitness()):0;this.ctx.fillStyle="black",this.ctx.fillText(`Generation: ${this.genetics.getGeneration()}`,5,10),this.ctx.fillText(`avg: ${Math.log2(1+this.genetics.getAverageFitness()).toFixed(3)}`,5,25),this.ctx.fillText(`best: ${r}`,5,40),this.ctx.fillText(`ticks: ${this.ticks} / ${this.params.ticks_per_gen}`,5,55)}setSelected(t){this.follow_fittest=!1,this.selected_idx=t}getSelected(){return this.population[this.selected_idx]}getEater(t){return this.population[t]}getEaterBrain(t){return r.NeuralNet.fromWeights(this.layer_sizes,this.genetics.getChromosome(this.population[t].getChromosomeIdx()).getBits()).toFunction()}toggleFastMode(){this.fast_mode=!this.fast_mode}getDarwinInstance(){return this.genetics}getFittestBrain(){return r.NeuralNet.fromWeights(this.layer_sizes,this.genetics.getFittest().getBits()).toFunction()}toggleMating(){this.stop_mating=!this.stop_mating}get selectedIdx(){return this.selected_idx}get parameters(){return this.params}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(6),o=s(0),n=s(1),r=s(8);e.Darwin=class{constructor(t){this.population=[],this.generation=0;const e=()=>{this.stats.needs_update=!0};for(let s=0;s<t.population_size;s++){const s=new i.Chromosome(t.chromosome_length,t.rand_func);s.on("update_fitness",e),this.population.push(s)}this.params=Object.assign({crossover_rate:.7,mutation_rate:1/t.chromosome_length,crossover_method:o.CrossoverMethod.SINGLE_POINT,mutation_method:n.MutationMethod.FLIP,elite_count:1,elite_copies:1},t),this.stats={fittest:this.population[0],avg_fitness:0,sum_fitness:0,needs_update:!0}}duplicateElite(t){if(this.params.elite_count>0){const e=this.getTopChromosomes(this.params.elite_count);t.push(...e);for(let s=0;s<this.params.elite_count;s++)for(let i=0;i<this.params.elite_copies;i++)t.push(e[s].clone())}}crossover(t){for(;t.length<this.params.population_size;)if(Math.random()<this.params.crossover_rate){const e=this.getRandomChromosome(),s=this.getRandomChromosome(),o=e.crossover(s,this.params.crossover_method),n=new i.Chromosome(o.baby1,this.params.rand_func),r=new i.Chromosome(o.baby2,this.params.rand_func);t.push(n,r)}this.params.population_size%2==1&&t.pop()}mutate(t){for(const e of t)e.mutate(this.params.mutation_rate,this.params.mutation_method)}updateFitness(t){for(const e of this.population)e.setFitness(t(e.getBits()));this.stats.needs_update=!0}mate(){const t=[];this.duplicateElite(t),this.crossover(t),this.mutate(t),this.population=t,this.generation++,this.updateStats(!0)}getPopulation(){return this.population}getChromosome(t){return this.population[t]}getRandomChromosome(){if(this.stats.needs_update&&this.updateStats(),0===this.stats.sum_fitness)return this.population[Math.floor(Math.random()*this.population.length)];const t=Math.random()*this.stats.sum_fitness;let e=0;for(let s=0;s<this.population.length;s++)if((e+=this.population[s].getFitness())>t)return this.population[s]}getTopChromosomes(t){return r.partialQuickSort(this.population,t).slice(0,t)}getAverageFitness(){return this.stats.needs_update&&this.updateStats(),this.stats.avg_fitness}getFittest(){return this.stats.needs_update&&this.updateStats(),this.stats.fittest}getParams(){return this.params}getGeneration(){return this.generation}getStats(){return this.stats}updateStats(t=!1){if(t||this.stats.needs_update){let t=0,e=0,s=0;for(let i=0;i<this.population.length;i++){const o=this.population[i].getFitness();t+=o,o>e&&(e=o,s=i)}this.stats.sum_fitness=t,this.stats.avg_fitness=t/this.params.population_size,this.stats.fittest=this.population[s].clone(),this.stats.needs_update=!1}}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(1),o=s(0),n=s(7);class r extends n.EventEmitter{constructor(t,e){if(super(),this.bits=[],this.fitness=0,this.rand_func=e,"number"==typeof t){this.length=t;for(let t=0;t<this.length;t++)this.bits.push(e())}else this.bits=t,this.length=t.length}getFitness(){return this.fitness}setFitness(t){this.fitness=t,this.emit("update_fitness",t)}compare(t){let e=0;for(let s=0;s<Math.min(this.length,t.length);s++)e+=this.bits[s]!==t.bits[s]?1:0;return e}mutate_flip(t){for(let e=0;e<this.length;e++)Math.random()<t&&(this.bits[e]=this.rand_func())}mutate_swap(t){for(let e=0;e<this.length;e++)if(Math.random()<t){const t=Math.floor(Math.random()*this.length),s=this.bits[e];this.bits[e]=this.bits[t],this.bits[t]=s}}mutate(t=1/this.length,e){if("number"==typeof e)switch(e){case i.MutationMethod.FLIP:this.mutate_flip(t);break;case i.MutationMethod.SWAP:this.mutate_swap(t)}else this.setBits(e(this.getBits()))}crossover_single_point(t){const e=[],s=[],i=Math.floor(Math.random()*this.length);for(let o=0;o<this.length;o++)e.push(o<i?this.bits[o]:t.bits[o]),s.push(o<i?t.bits[o]:this.bits[o]);return{baby1:e,baby2:s}}crossover_two_point(t){const e=[],s=[];let i=Math.floor(Math.random()*this.length),o=Math.floor(Math.random()*this.length);if(i>o){const t=o;o=i,i=t}for(let n=0;n<this.length;n++)e.push(n<i?this.bits[n]:n<o?t.bits[n]:this.bits[n]),s.push(n<i?t.bits[n]:n<o?this.bits[n]:t.bits[n]);return{baby1:e,baby2:s}}crossover_uniform(t){const e=[],s=[];for(let i=0;i<this.length;i++){let o=Math.random()<.5;e.push(o?t.bits[i]:this.bits[i]),s.push(o?this.bits[i]:t.bits[i])}return{baby1:e,baby2:s}}crossover_half_uniform(t){let e=[],s=[],i=[];for(let e=0;e<this.length;e++)this.bits[e]!==t.bits[e]&&i.push(e);let o=i.length;e=this.bits.slice(),s=t.bits.slice();for(let n=0;n<o/2;n++){let o=Math.floor(Math.random()*i.length);e[i[o]]=t.bits[i[o]],s[i[o]]=this.bits[i[o]],i.splice(o,1)}return{baby1:e,baby2:s}}crossover_ordered(t){const e=[],s=[];let i=Math.floor(Math.random()*this.length),o=Math.floor(Math.random()*this.length),n=i;i=Math.min(i,o),o=Math.max(n,o);for(let n=i;n<o;n++)e[n]=i<=n&&n<=o?t.bits[n]:void 0,s[n]=i<=n&&n<=o?this.bits[n]:void 0;for(let i=0;i<this.length;i++){if(-1===e.indexOf(this.bits[i]))e[i]=this.bits[i];else for(let t=0;t<this.length;t++)-1===e.indexOf(this.bits[t])&&(e[i]=this.bits[t]);if(-1===s.indexOf(t.bits[i]))s[i]=t.bits[i];else for(let e=0;e<this.length;e++)-1===s.indexOf(t.bits[e])&&(s[i]=t.bits[e])}return{baby1:e,baby2:s}}crossover(t,e){if("number"==typeof e)switch(e){case o.CrossoverMethod.SINGLE_POINT:return this.crossover_single_point(t);case o.CrossoverMethod.TWO_POINT:return this.crossover_two_point(t);case o.CrossoverMethod.UNIFORM:return this.crossover_uniform(t);case o.CrossoverMethod.HALF_UNIFORM:return this.crossover_half_uniform(t);case o.CrossoverMethod.ORDERED:return this.crossover_ordered(t);default:throw new Error(`Unimplemented CrossoverMethod: ${e} (${o.CrossoverMethod[e]})`)}return e(t)}setBits(t){this.bits=[...t]}getBits(){return this.bits}copy(t){this.bits=t.bits.slice(),this.rand_func=t.rand_func,this.fitness=t.fitness}clone(){let t=new r(this.length,this.rand_func);return t.copy(this),t}}e.Chromosome=r},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.EventEmitter=class{constructor(){this.handlers=new Map}on(t,e){this.handlers.has(t)?this.handlers.get(t).push(e):this.handlers.set(t,[e])}emit(t,e){if(this.handlers.has(t))for(const s of this.handlers.get(t))s.call(this,e)}bindEvent(t,e){t.on(e,t=>this.emit(e,t))}}},function(t,e,s){"use strict";function i(t,e,s){if(e===s)return;const i=t[e];t[e]=t[s],t[s]=i}Object.defineProperty(e,"__esModule",{value:!0}),e.partialQuickSort=function(t,e){return function t(e,s,o,n){const r=Math.floor((s+o)/2);if(s<o){const a=function(t,e,s,o){const n=t[e].getFitness();for(;s<=o;){for(;t[s].getFitness()>n;)s++;for(;t[o].getFitness()<n;)o--;s<=o&&(i(t,s,o),s++,o--)}return s}(e,r,s,o);t(e,s,a-1,n),a<n&&t(e,a,o,n)}}(t,0,t.length-1,e),t}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(2);e.Eater=class{constructor(t,e,s){this.pos=t,this.angle=e,this.chromosomeIdx=s}getChromosomeIdx(){return this.chromosomeIdx}getPosition(){return this.pos}setPosition(t){this.pos=t}getAngle(){return this.angle}setAngle(t){this.angle=t%i.MathUtils.TWO_PI}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class i{constructor(){this.weights_and_biases=[]}getWeight(t,e,s){return this.weights_and_biases[this.offsets[t-1]+e*(this.num_neurons_per_layer[t-1]+1)+s+1]}getBias(t,e){return this.weights_and_biases[this.offsets[t-1]+e*(this.num_neurons_per_layer[t-1]+1)]}feedforward(t){if(0===this.weights_and_biases.length)throw new Error("Cannot feedforward before 'putWeights' or 'fromJSON' was called.");if(t.length!==this.num_neurons_per_layer[0])throw new Error(`Expected ${this.num_neurons_per_layer[0]} inputs, got ${t.length}.`);let e,s=t;for(let t=1;t<this.num_neurons_per_layer.length;t++){e=[];for(let i=0;i<this.num_neurons_per_layer[t];i++){let o=this.getBias(t,i);for(let e=0;e<this.num_neurons_per_layer[t-1];e++)o+=this.getWeight(t,i,e)*s[e];e[i]=1/(1+Math.exp(-o))}s=e}return e}run(...t){return this.feedforward(t)}computeOffsets(){this.offsets=[0];let t=0;for(let e=1;e<this.num_neurons_per_layer.length-1;e++)this.offsets.push(t+=this.num_neurons_per_layer[e-1]*(this.num_neurons_per_layer[e]+1))}putWeights(t,e){this.num_neurons_per_layer=t,this.computeOffsets();let s=i.weightsCount(t);if(s!==e.length)throw new Error(`The number of weights do not match the given architecture, expected ${s}, got ${e.length}.`);this.weights_and_biases=e}static weightsCount(t){let e=0;for(let s=1;s<t.length;s++)e+=t[s]*(t[s-1]+1);return e}toJSON(){return{weights_and_biases:this.weights_and_biases,layers:this.num_neurons_per_layer}}toFunction(){return{args:["inputs"],body:`\n            var json = ${JSON.stringify(this.toJSON())};\n\n            if (inputs.length !== json.layers[0])\n                throw new Error('Expected ' + json.layers[0] + ' inputs, got ' + inputs.length + '.');\n\n            var offsets = ${JSON.stringify(this.offsets)}, a = inputs, output;\n\n            for (var l = 1; l < json.layers.length; l++) {\n                output = [];\n                for (var j = 0; j < json.layers[l]; j++) {\n                    var z = json.weights_and_biases[offsets[l - 1] + j * (json.layers[l - 1] + 1)]; \n                    for (var k = 0; k < json.layers[l - 1]; k++)\n                        z += json.weights_and_biases[offsets[l - 1] + j * (json.layers[l - 1] + 1) + k + 1] * a[k];\n                    output[j] = 1 / (1 + Math.exp(-z));\n                }\n                a = output;\n            }\n\n            return output;\n        `}}static fromJSON(t){const e=new i;return e.putWeights(t.layers,t.weights_and_biases),e}static fromWeights(t,e){const s=new i;return s.putWeights(t,e),s}}e.NeuralNet=i},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class i{constructor(t,e){this.x=t,this.y=e}add(t){return new i(this.x+t.x,this.y+t.y)}sub(t){return new i(this.x-t.x,this.y-t.y)}plus(t){this.x+=t.x,this.y+=t.y}minus(t){this.x-=t.x,this.y-=t.y}dot(t){return this.x*t.x+this.y*t.y}hadamard(t){return t instanceof i?new i(this.x*t.x,this.y*t.y):new i(this.x*t[0],this.y*t[1])}norm(){return Math.pow(this.dot(this),.5)}norm_sq(){return this.dot(this)}times(t){return new i(this.x*t,this.y*t)}normalize(){return this.times(1/this.norm())}dist(t){return this.sub(t).norm()}dist_sq(t){return this.sub(t).norm_sq()}map(t){return new i(t(this.x),t(this.y))}angle(){return Math.atan2(this.y,this.x)}toArray(){return[this.x,this.y]}fromArray(t){return new i(t[0],t[1])}static fill(t){return new i(t,t)}static zeroes(){return i.fill(0)}static ones(){return i.fill(1)}static rand(){return new i(Math.random(),Math.random())}static clone(t){return new i(t.x,t.y)}}e.Vector2D=i}]);