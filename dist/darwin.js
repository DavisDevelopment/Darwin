!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.darwin=e():t.darwin=e()}("undefined"!=typeof window?window:this,function(){return function(t){var e={};function s(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}return s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)s.d(n,o,function(e){return t[e]}.bind(null,o));return n},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=2)}([function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.SINGLE_POINT=0]="SINGLE_POINT",t[t.TWO_POINT=1]="TWO_POINT",t[t.UNIFORM=2]="UNIFORM",t[t.HALF_UNIFORM=3]="HALF_UNIFORM",t[t.ORDERED=4]="ORDERED"}(e.CrossoverMethod||(e.CrossoverMethod={}))},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.FLIP=0]="FLIP",t[t.SWAP=1]="SWAP"}(e.MutationMethod||(e.MutationMethod={}))},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=s(3),o=s(0),i=s(1),r=s(5);e.Darwin=class{constructor(t){this.population=[],this.generation=0;const e=()=>{this.stats.needs_update=!0};for(let s=0;s<t.population_size;s++){const s=new n.Chromosome(t.chromosome_length,t.rand_gene);s.on("update_fitness",e),this.population.push(s)}this.params=Object.assign({crossover_rate:.7,mutation_rate:1/t.population_size,crossover_method:o.CrossoverMethod.SINGLE_POINT,mutation_method:i.MutationMethod.FLIP,elite_count:Math.ceil(t.population_size/25),elite_copies:1},t),this.stats={fittest:this.population[0],avg_fitness:0,sum_fitness:0,fittest_idx:0,needs_update:!0}}duplicateElite(t){const{elite_count:e,elite_copies:s}=this.params;if(e>0){const n=this.getTopChromosomes(e);t.push(...n);for(let o=0;o<e;o++)for(let e=0;e<s;e++)t.push(n[o].clone())}}crossover(t){const{population_size:e,crossover_rate:s,crossover_method:o,rand_gene:i}=this.params;for(;t.length<e;)if(Math.random()<s){const e=this.getRandomChromosome(),s=this.getRandomChromosome(),{baby1:r,baby2:h}=e.crossover(s,o);t.push(new n.Chromosome(r,i),new n.Chromosome(h,i))}this.params.population_size%2==1&&t.pop()}mutate(t){for(const e of t)e.mutate(this.params.mutation_rate,this.params.mutation_method)}updateFitness(t){for(const e of this.population)e.setFitness(t(e.getGenes()));this.stats.needs_update=!0}mate(){const t=[];this.duplicateElite(t),this.crossover(t),this.mutate(t),this.population=t,this.generation++,this.updateStats(!0)}getPopulation(){return this.population}getChromosome(t){return this.population[t]}getRandomChromosome(){if(this.updateStats(),0===this.stats.sum_fitness)return this.population[Math.floor(Math.random()*this.population.length)];const t=Math.random()*this.stats.sum_fitness;let e=0;for(let s=0;s<this.population.length;s++)if((e+=this.population[s].getFitness())>t)return this.population[s];return this.population[0]}getTopChromosomes(t){return r.selectKBest(this.population,t)}getAverageFitness(){return this.updateStats(),this.stats.avg_fitness}getFittest(){return this.updateStats(),this.stats.fittest}getParams(){return this.params}getGeneration(){return this.generation}getStats(){return this.stats}updateStats(t=!1){if(t||this.stats.needs_update){let t=0,e=0,s=0;for(let n=0;n<this.population.length;n++){const o=this.population[n].getFitness();t+=o,o>e&&(e=o,s=n)}this.stats.sum_fitness=t,this.stats.avg_fitness=t/this.params.population_size,this.stats.fittest=this.population[s].clone(),this.stats.fittest_idx=s,this.stats.needs_update=!1}}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=s(0),o=s(4),i=s(1);class r extends o.default{constructor(t,e){if(super(),this.genes=[],this.fitness=0,this.rand_gene=e,"number"==typeof t){this.length=t;for(let t=0;t<this.length;t++)this.genes.push(e())}else this.genes=t,this.length=t.length}getFitness(){return this.fitness}setFitness(t){this.fitness=t,this.emit("update_fitness",t)}compare(t){let e=0;for(let s=0;s<Math.min(this.length,t.length);s++)e+=this.genes[s]!==t.genes[s]?1:0;return e}mutate_flip(t){for(let e=0;e<this.length;e++)Math.random()<t&&(this.genes[e]=this.rand_gene())}mutate_swap(t){for(let e=0;e<this.length;e++)if(Math.random()<t){const t=Math.floor(Math.random()*this.length),s=this.genes[e];this.genes[e]=this.genes[t],this.genes[t]=s}}mutate(t=1/this.length,e){if("number"==typeof e)switch(e){case i.MutationMethod.FLIP:this.mutate_flip(t);break;case i.MutationMethod.SWAP:this.mutate_swap(t)}else this.setGenes(e(this.getGenes()))}crossover_single_point(t){const e=Math.floor(Math.random()*this.length);return{baby1:[...this.genes.slice(0,e),...t.genes.slice(e)],baby2:[...t.genes.slice(0,e),...this.genes.slice(e)]}}crossover_two_point(t){const e=[],s=[];let n=Math.floor(Math.random()*this.length),o=Math.floor(Math.random()*this.length);n>o&&([n,o]=[o,n]);for(let i=0;i<this.length;i++)e.push(i<n?this.genes[i]:i<o?t.genes[i]:this.genes[i]),s.push(i<n?t.genes[i]:i<o?this.genes[i]:t.genes[i]);return{baby1:e,baby2:s}}crossover_uniform(t){const e=[],s=[];for(let n=0;n<this.length;n++){let o=Math.random()<.5;e.push(o?t.genes[n]:this.genes[n]),s.push(o?this.genes[n]:t.genes[n])}return{baby1:e,baby2:s}}crossover_half_uniform(t){let e=[],s=[],n=[];for(let e=0;e<this.length;e++)this.genes[e]!==t.genes[e]&&n.push(e);let o=n.length;e=this.genes.slice(),s=t.genes.slice();for(let i=0;i<o/2;i++){let o=Math.floor(Math.random()*n.length);e[n[o]]=t.genes[n[o]],s[n[o]]=this.genes[n[o]],n.splice(o,1)}return{baby1:e,baby2:s}}crossover_ordered(t){const e=[],s=[];let n=Math.floor(Math.random()*this.length),o=Math.floor(Math.random()*this.length),i=n;n=Math.min(n,o),o=Math.max(i,o);for(let i=n;i<o;i++)e[i]=n<=i&&i<=o?t.genes[i]:void 0,s[i]=n<=i&&i<=o?this.genes[i]:void 0;for(let n=0;n<this.length;n++){if(-1===e.indexOf(this.genes[n]))e[n]=this.genes[n];else for(let t=0;t<this.length;t++)-1===e.indexOf(this.genes[t])&&(e[n]=this.genes[t]);if(-1===s.indexOf(t.genes[n]))s[n]=t.genes[n];else for(let e=0;e<this.length;e++)-1===s.indexOf(t.genes[e])&&(s[n]=t.genes[e])}return{baby1:e,baby2:s}}crossover(t,e){if("number"==typeof e)switch(e){case n.CrossoverMethod.SINGLE_POINT:return this.crossover_single_point(t);case n.CrossoverMethod.TWO_POINT:return this.crossover_two_point(t);case n.CrossoverMethod.UNIFORM:return this.crossover_uniform(t);case n.CrossoverMethod.HALF_UNIFORM:return this.crossover_half_uniform(t);case n.CrossoverMethod.ORDERED:return this.crossover_ordered(t);default:throw new Error(`Unimplemented CrossoverMethod: ${e} (${n.CrossoverMethod[e]})`)}return e(t)}setGenes(t){this.genes=[...t]}getGenes(){return this.genes}copy(t){this.genes=t.genes.slice(),this.rand_gene=t.rand_gene,this.fitness=t.fitness}clone(){let t=new r(this.length,this.rand_gene);return t.copy(this),t}}e.Chromosome=r},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.event_handlers=new Map}on(t,e){this.isListening(t)||this.event_handlers.set(t,[]),this.event_handlers.get(t).push(e)}isListening(t){return this.event_handlers.has(t)}emit(t,e,s){if(this.isListening(t))for(const n of this.event_handlers.get(t))n.call(s,e)}bindEvent(t,e){t.on(e,t=>this.emit(e,t))}removeListener(t){this.event_handlers.delete(t)}removeListeners(){this.event_handlers.clear()}}},function(t,e,s){"use strict";function n(t,e=0,s=t.length-1){const i=t[Math.floor((e+s)/2)].getFitness();if(e<s){const r=o(t,e,s,i);n(t,e,r-1),n(t,r,s)}}function o(t,e,s,n){for(;e<=s;){for(;t[e].getFitness()>n;)e++;for(;t[s].getFitness()<n;)s--;e<=s&&([t[e],t[s]]=[t[s],t[e]],e++,s--)}return e}Object.defineProperty(e,"__esModule",{value:!0}),e.selectKBest=function(t,e){return function(t,e,s=0,i=t.length-1){const r=t[Math.floor((s+i)/2)].getFitness();if(s<i){const h=o(t,s,i,r);n(t,s,h-1),h<e&&n(t,h,i)}}(t,e),t.slice(0,e)}}])});