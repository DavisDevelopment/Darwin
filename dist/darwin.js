!function(t,s){"object"==typeof exports&&"object"==typeof module?module.exports=s():"function"==typeof define&&define.amd?define([],s):"object"==typeof exports?exports.darwin=s():t.darwin=s()}("undefined"!=typeof window?window:this,function(){return function(t){var s={};function e(i){if(s[i])return s[i].exports;var o=s[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=t,e.c=s,e.d=function(t,s,i){e.o(t,s)||Object.defineProperty(t,s,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,s){if(1&s&&(t=e(t)),8&s)return t;if(4&s&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&s&&"string"!=typeof t)for(var o in t)e.d(i,o,function(s){return t[s]}.bind(null,o));return i},e.n=function(t){var s=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(s,"a",s),s},e.o=function(t,s){return Object.prototype.hasOwnProperty.call(t,s)},e.p="",e(e.s=2)}([function(t,s,e){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),function(t){t[t.FLIP=0]="FLIP",t[t.SWAP=1]="SWAP"}(s.MutationMethod||(s.MutationMethod={}))},function(t,s,e){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),function(t){t[t.SINGLE_POINT=0]="SINGLE_POINT",t[t.TWO_POINT=1]="TWO_POINT",t[t.UNIFORM=2]="UNIFORM",t[t.HALF_UNIFORM=3]="HALF_UNIFORM",t[t.ORDERED=4]="ORDERED"}(s.CrossoverMethod||(s.CrossoverMethod={}))},function(t,s,e){"use strict";Object.defineProperty(s,"__esModule",{value:!0});const i=e(3),o=e(1),n=e(0),r=e(5);s.Darwin=class{constructor(t){this.population=[],this.generation=0;const s=()=>{this.stats.needs_update=!0};for(let e=0;e<t.population_size;e++){const e=new i.Chromosome(t.chromosome_length,t.rand_func);e.on("update_fitness",s),this.population.push(e)}this.params=Object.assign({crossover_rate:.7,mutation_rate:1/t.chromosome_length,crossover_method:o.CrossoverMethod.SINGLE_POINT,mutation_method:n.MutationMethod.FLIP,elite_count:1,elite_copies:1},t),this.stats={fittest:this.population[0],avg_fitness:0,sum_fitness:0,needs_update:!0}}duplicateElite(t){if(this.params.elite_count>0){const s=this.getTopChromosomes(this.params.elite_count);t.push(...s);for(let e=0;e<this.params.elite_count;e++)for(let i=0;i<this.params.elite_copies;i++)t.push(s[e].clone())}}crossover(t){for(;t.length<this.params.population_size;)if(Math.random()<this.params.crossover_rate){const s=this.getRandomChromosome(),e=this.getRandomChromosome(),o=s.crossover(e,this.params.crossover_method),n=new i.Chromosome(o.baby1,this.params.rand_func),r=new i.Chromosome(o.baby2,this.params.rand_func);t.push(n,r)}this.params.population_size%2==1&&t.pop()}mutate(t){for(const s of t)s.mutate(this.params.mutation_rate,this.params.mutation_method)}updateFitness(t){for(const s of this.population)s.setFitness(t(s.getBits()));this.stats.needs_update=!0}mate(){const t=[];this.duplicateElite(t),this.crossover(t),this.mutate(t),this.population=t,this.generation++,this.updateStats(!0)}getPopulation(){return this.population}getChromosome(t){return this.population[t]}getRandomChromosome(){if(this.stats.needs_update&&this.updateStats(),0===this.stats.sum_fitness)return this.population[Math.floor(Math.random()*this.population.length)];const t=Math.random()*this.stats.sum_fitness;let s=0;for(let e=0;e<this.population.length;e++)if((s+=this.population[e].getFitness())>t)return this.population[e]}getTopChromosomes(t){return r.partialQuickSort(this.population,t).slice(0,t)}getAverageFitness(){return this.stats.needs_update&&this.updateStats(),this.stats.avg_fitness}getFittest(){return this.stats.needs_update&&this.updateStats(),this.stats.fittest}getParams(){return this.params}getGeneration(){return this.generation}getStats(){return this.stats}updateStats(t=!1){if(t||this.stats.needs_update){let t=0,s=0,e=0;for(let i=0;i<this.population.length;i++){const o=this.population[i].getFitness();t+=o,o>s&&(s=o,e=i)}this.stats.sum_fitness=t,this.stats.avg_fitness=t/this.params.population_size,this.stats.fittest=this.population[e].clone(),this.stats.needs_update=!1}}}},function(t,s,e){"use strict";Object.defineProperty(s,"__esModule",{value:!0});const i=e(0),o=e(1),n=e(4);class r extends n.EventEmitter{constructor(t,s){if(super(),this.bits=[],this.fitness=0,this.rand_func=s,"number"==typeof t){this.length=t;for(let t=0;t<this.length;t++)this.bits.push(s())}else this.bits=t,this.length=t.length}getFitness(){return this.fitness}setFitness(t){this.fitness=t,this.emit("update_fitness",t)}compare(t){let s=0;for(let e=0;e<Math.min(this.length,t.length);e++)s+=this.bits[e]!==t.bits[e]?1:0;return s}mutate_flip(t){for(let s=0;s<this.length;s++)Math.random()<t&&(this.bits[s]=this.rand_func())}mutate_swap(t){for(let s=0;s<this.length;s++)if(Math.random()<t){const t=Math.floor(Math.random()*this.length),e=this.bits[s];this.bits[s]=this.bits[t],this.bits[t]=e}}mutate(t=1/this.length,s){if("number"==typeof s)switch(s){case i.MutationMethod.FLIP:this.mutate_flip(t);break;case i.MutationMethod.SWAP:this.mutate_swap(t)}else this.setBits(s(this.getBits()))}crossover_single_point(t){const s=[],e=[],i=Math.floor(Math.random()*this.length);for(let o=0;o<this.length;o++)s.push(o<i?this.bits[o]:t.bits[o]),e.push(o<i?t.bits[o]:this.bits[o]);return{baby1:s,baby2:e}}crossover_two_point(t){const s=[],e=[];let i=Math.floor(Math.random()*this.length),o=Math.floor(Math.random()*this.length);if(i>o){const t=o;o=i,i=t}for(let n=0;n<this.length;n++)s.push(n<i?this.bits[n]:n<o?t.bits[n]:this.bits[n]),e.push(n<i?t.bits[n]:n<o?this.bits[n]:t.bits[n]);return{baby1:s,baby2:e}}crossover_uniform(t){const s=[],e=[];for(let i=0;i<this.length;i++){let o=Math.random()<.5;s.push(o?t.bits[i]:this.bits[i]),e.push(o?this.bits[i]:t.bits[i])}return{baby1:s,baby2:e}}crossover_half_uniform(t){let s=[],e=[],i=[];for(let s=0;s<this.length;s++)this.bits[s]!==t.bits[s]&&i.push(s);let o=i.length;s=this.bits.slice(),e=t.bits.slice();for(let n=0;n<o/2;n++){let o=Math.floor(Math.random()*i.length);s[i[o]]=t.bits[i[o]],e[i[o]]=this.bits[i[o]],i.splice(o,1)}return{baby1:s,baby2:e}}crossover_ordered(t){const s=[],e=[];let i=Math.floor(Math.random()*this.length),o=Math.floor(Math.random()*this.length),n=i;i=Math.min(i,o),o=Math.max(n,o);for(let n=i;n<o;n++)s[n]=i<=n&&n<=o?t.bits[n]:void 0,e[n]=i<=n&&n<=o?this.bits[n]:void 0;for(let i=0;i<this.length;i++){if(-1===s.indexOf(this.bits[i]))s[i]=this.bits[i];else for(let t=0;t<this.length;t++)-1===s.indexOf(this.bits[t])&&(s[i]=this.bits[t]);if(-1===e.indexOf(t.bits[i]))e[i]=t.bits[i];else for(let s=0;s<this.length;s++)-1===e.indexOf(t.bits[s])&&(e[i]=t.bits[s])}return{baby1:s,baby2:e}}crossover(t,s){if("number"==typeof s)switch(s){case o.CrossoverMethod.SINGLE_POINT:return this.crossover_single_point(t);case o.CrossoverMethod.TWO_POINT:return this.crossover_two_point(t);case o.CrossoverMethod.UNIFORM:return this.crossover_uniform(t);case o.CrossoverMethod.HALF_UNIFORM:return this.crossover_half_uniform(t);case o.CrossoverMethod.ORDERED:return this.crossover_ordered(t);default:throw new Error(`Unimplemented CrossoverMethod: ${s} (${o.CrossoverMethod[s]})`)}return s(t)}setBits(t){this.bits=[...t]}getBits(){return this.bits}copy(t){this.bits=t.bits.slice(),this.rand_func=t.rand_func,this.fitness=t.fitness}clone(){let t=new r(this.length,this.rand_func);return t.copy(this),t}}s.Chromosome=r},function(t,s,e){"use strict";Object.defineProperty(s,"__esModule",{value:!0});s.EventEmitter=class{constructor(){this.handlers=new Map}on(t,s){this.handlers.has(t)?this.handlers.get(t).push(s):this.handlers.set(t,[s])}emit(t,s){if(this.handlers.has(t))for(const e of this.handlers.get(t))e.call(this,s)}bindEvent(t,s){t.on(s,t=>this.emit(s,t))}}},function(t,s,e){"use strict";function i(t,s,e){if(s===e)return;const i=t[s];t[s]=t[e],t[e]=i}Object.defineProperty(s,"__esModule",{value:!0}),s.partialQuickSort=function(t,s){return function t(s,e,o,n){const r=Math.floor((e+o)/2);if(e<o){const h=function(t,s,e,o){const n=t[s].getFitness();for(;e<=o;){for(;t[e].getFitness()>n;)e++;for(;t[o].getFitness()<n;)o--;e<=o&&(i(t,e,o),e++,o--)}return e}(s,r,e,o);t(s,e,h-1,n),h<n&&t(s,h,o,n)}}(t,0,t.length-1,s),t}}])});