!function(t){var e={};function s(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)s.d(i,n,function(e){return t[e]}.bind(null,n));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=2)}([function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.FLIP=0]="FLIP",t[t.SWAP=1]="SWAP"}(e.MutationMethod||(e.MutationMethod={}))},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.SINGLE_POINT=0]="SINGLE_POINT",t[t.TWO_POINT=1]="TWO_POINT",t[t.UNIFORM=2]="UNIFORM",t[t.HALF_UNIFORM=3]="HALF_UNIFORM",t[t.ORDERED=4]="ORDERED"}(e.CrossoverMethod||(e.CrossoverMethod={}))},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(3);function n(t,e={}){const s=document.createElement(t);for(const t in e)s[t]=e[t];return s}function o(t){return n("span",{textContent:t})}function r(){return document.createElement("br")}const a=n("input",{type:"text",id:"target",style:"width: 400px;",value:"https://en.wikipedia.org/wiki/Genetic_algorithm"}),h=n("button",{id:"search",textContent:"Go"}),u=n("p",{id:"fittest",style:"font-size: 24px"}),l=n("div",{id:"statsDiv",style:"font-size: 24px"}),c=n("input",{type:"number",id:"population",style:"width: 70px;",value:"200"}),p=n("input",{type:"number",id:"crossover",style:"width: 70px;",value:"0.7",min:"0",max:"1",step:"0.01"}),f=n("input",{type:"number",id:"mutation",style:"width: 70px;",value:"0.02",min:"0",max:"1",step:"0.01"}),d=n("input",{type:"number",id:"elite_count",style:"width: 70px;",value:"15"}),m=n("input",{type:"number",id:"elite_copies",style:"width: 70px;",value:"2"});!function(...t){for(const e of t)document.body.appendChild(e)}(a,h,r(),u,r(),l,r(),o("Population "),c,r(),o("Crossover rate "),p,r(),o("Mutation rate "),f,r(),o("Elite count "),d,r(),o("Elite copies "),m),h.addEventListener("click",()=>{const t=a.value;for(const e of t)if(-1===i.alphabet.indexOf(e))return void alert(`The character '${e}' cannot be used`);const e=new i.MonkeyFactory({population_size:parseInt(c.value),chromosome_length:t.length,rand_func:i.rand_char,crossover_rate:parseFloat(p.value),mutation_rate:parseFloat(f.value),elite_count:parseInt(d.value),elite_copies:parseInt(m.value)}).search(t),s=()=>{const i=e.next();u.textContent=i.value.fittest.getBits().join("");const n=Math.log2(i.value.fittest.getFitness())/t.length,o=Math.log2(i.value.avg_fitness)/t.length;console.log(i.value),l.innerHTML=`generation: ${i.value.generation}</br>\n            average fitness: ${(100*o).toFixed(4)}% </br>\n            max fitness: ${(100*n).toFixed(4)}% `,i.done||requestAnimationFrame(s)};s()})},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(4);function n(){return e.alphabet[Math.floor(Math.random()*e.alphabet.length)]}function o(t,e){let s=0,i=Math.max(t.length,e.length)-Math.min(t.length,e.length);for(let i=0;i<Math.min(t.length,e.length);i++)s+=Number(t[i]!==e[i]);return s+i}e.alphabet=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"," ","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","?","!",".","#","@","&","*","$","%","+","-","/","=","0","1","2","3","4","5","6","7","8","9","(",")",",","'",'"',":","_","-"],e.rand_char=n;e.MonkeyFactory=class{constructor(t){this.params=t,this.params.rand_func=n}*search(t){this.params.chromosome_length=t.length;const e=new i.Darwin(this.params);for(;;){for(const s of e.getPopulation()){const i=o(s.getBits().join(""),t);if(s.setFitness(Math.pow(2,t.length-i)),0===i)return{generation:e.getGeneration(),avg_fitness:e.getAverageFitness(),fittest:s}}e.mate(),yield{avg_fitness:e.getAverageFitness(),fittest:e.getFittest(),generation:e.getGeneration()}}}getParams(){return this.params}setParams(t){this.params=t}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(5),n=s(1),o=s(0),r=s(7);e.Darwin=class{constructor(t){this.population=[],this.generation=0;const e=()=>{this.stats.needs_update=!0};for(let s=0;s<t.population_size;s++){const s=new i.Chromosome(t.chromosome_length,t.rand_func);s.on("update_fitness",e),this.population.push(s)}this.params=Object.assign({crossover_rate:.7,mutation_rate:1/t.chromosome_length,crossover_method:n.CrossoverMethod.SINGLE_POINT,mutation_method:o.MutationMethod.FLIP,elite_count:1,elite_copies:1},t),this.stats={fittest:this.population[0],avg_fitness:0,sum_fitness:0,fittest_idx:0,needs_update:!0}}duplicateElite(t){if(this.params.elite_count>0){const e=this.getTopChromosomes(this.params.elite_count);t.push(...e);for(let s=0;s<this.params.elite_count;s++)for(let i=0;i<this.params.elite_copies;i++)t.push(e[s].clone())}}crossover(t){for(;t.length<this.params.population_size;)if(Math.random()<this.params.crossover_rate){const e=this.getRandomChromosome(),s=this.getRandomChromosome(),n=e.crossover(s,this.params.crossover_method),o=new i.Chromosome(n.baby1,this.params.rand_func),r=new i.Chromosome(n.baby2,this.params.rand_func);t.push(o,r)}this.params.population_size%2==1&&t.pop()}mutate(t){for(const e of t)e.mutate(this.params.mutation_rate,this.params.mutation_method)}updateFitness(t){for(const e of this.population)e.setFitness(t(e.getBits()));this.stats.needs_update=!0}mate(){const t=[];this.duplicateElite(t),this.crossover(t),this.mutate(t),this.population=t,this.generation++,this.updateStats(!0)}getPopulation(){return this.population}getChromosome(t){return this.population[t]}getRandomChromosome(){if(this.stats.needs_update&&this.updateStats(),0===this.stats.sum_fitness)return this.population[Math.floor(Math.random()*this.population.length)];const t=Math.random()*this.stats.sum_fitness;let e=0;for(let s=0;s<this.population.length;s++)if((e+=this.population[s].getFitness())>t)return this.population[s]}getTopChromosomes(t){return r.partialQuickSort(this.population,t).slice(0,t)}getAverageFitness(){return this.stats.needs_update&&this.updateStats(),this.stats.avg_fitness}getFittest(){return this.stats.needs_update&&this.updateStats(),this.stats.fittest}getParams(){return this.params}getGeneration(){return this.generation}getStats(){return this.stats}updateStats(t=!1){if(t||this.stats.needs_update){let t=0,e=0,s=0;for(let i=0;i<this.population.length;i++){const n=this.population[i].getFitness();t+=n,n>e&&(e=n,s=i)}this.stats.sum_fitness=t,this.stats.avg_fitness=t/this.params.population_size,this.stats.fittest=this.population[s].clone(),this.stats.fittest_idx=s,this.stats.needs_update=!1}}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(0),n=s(1),o=s(6);class r extends o.EventEmitter{constructor(t,e){if(super(),this.bits=[],this.fitness=0,this.rand_func=e,"number"==typeof t){this.length=t;for(let t=0;t<this.length;t++)this.bits.push(e())}else this.bits=t,this.length=t.length}getFitness(){return this.fitness}setFitness(t){this.fitness=t,this.emit("update_fitness",t)}compare(t){let e=0;for(let s=0;s<Math.min(this.length,t.length);s++)e+=this.bits[s]!==t.bits[s]?1:0;return e}mutate_flip(t){for(let e=0;e<this.length;e++)Math.random()<t&&(this.bits[e]=this.rand_func())}mutate_swap(t){for(let e=0;e<this.length;e++)if(Math.random()<t){const t=Math.floor(Math.random()*this.length),s=this.bits[e];this.bits[e]=this.bits[t],this.bits[t]=s}}mutate(t=1/this.length,e){if("number"==typeof e)switch(e){case i.MutationMethod.FLIP:this.mutate_flip(t);break;case i.MutationMethod.SWAP:this.mutate_swap(t)}else this.setBits(e(this.getBits()))}crossover_single_point(t){const e=[],s=[],i=Math.floor(Math.random()*this.length);for(let n=0;n<this.length;n++)e.push(n<i?this.bits[n]:t.bits[n]),s.push(n<i?t.bits[n]:this.bits[n]);return{baby1:e,baby2:s}}crossover_two_point(t){const e=[],s=[];let i=Math.floor(Math.random()*this.length),n=Math.floor(Math.random()*this.length);if(i>n){const t=n;n=i,i=t}for(let o=0;o<this.length;o++)e.push(o<i?this.bits[o]:o<n?t.bits[o]:this.bits[o]),s.push(o<i?t.bits[o]:o<n?this.bits[o]:t.bits[o]);return{baby1:e,baby2:s}}crossover_uniform(t){const e=[],s=[];for(let i=0;i<this.length;i++){let n=Math.random()<.5;e.push(n?t.bits[i]:this.bits[i]),s.push(n?this.bits[i]:t.bits[i])}return{baby1:e,baby2:s}}crossover_half_uniform(t){let e=[],s=[],i=[];for(let e=0;e<this.length;e++)this.bits[e]!==t.bits[e]&&i.push(e);let n=i.length;e=this.bits.slice(),s=t.bits.slice();for(let o=0;o<n/2;o++){let n=Math.floor(Math.random()*i.length);e[i[n]]=t.bits[i[n]],s[i[n]]=this.bits[i[n]],i.splice(n,1)}return{baby1:e,baby2:s}}crossover_ordered(t){const e=[],s=[];let i=Math.floor(Math.random()*this.length),n=Math.floor(Math.random()*this.length),o=i;i=Math.min(i,n),n=Math.max(o,n);for(let o=i;o<n;o++)e[o]=i<=o&&o<=n?t.bits[o]:void 0,s[o]=i<=o&&o<=n?this.bits[o]:void 0;for(let i=0;i<this.length;i++){if(-1===e.indexOf(this.bits[i]))e[i]=this.bits[i];else for(let t=0;t<this.length;t++)-1===e.indexOf(this.bits[t])&&(e[i]=this.bits[t]);if(-1===s.indexOf(t.bits[i]))s[i]=t.bits[i];else for(let e=0;e<this.length;e++)-1===s.indexOf(t.bits[e])&&(s[i]=t.bits[e])}return{baby1:e,baby2:s}}crossover(t,e){if("number"==typeof e)switch(e){case n.CrossoverMethod.SINGLE_POINT:return this.crossover_single_point(t);case n.CrossoverMethod.TWO_POINT:return this.crossover_two_point(t);case n.CrossoverMethod.UNIFORM:return this.crossover_uniform(t);case n.CrossoverMethod.HALF_UNIFORM:return this.crossover_half_uniform(t);case n.CrossoverMethod.ORDERED:return this.crossover_ordered(t);default:throw new Error(`Unimplemented CrossoverMethod: ${e} (${n.CrossoverMethod[e]})`)}return e(t)}setBits(t){this.bits=[...t]}getBits(){return this.bits}copy(t){this.bits=t.bits.slice(),this.rand_func=t.rand_func,this.fitness=t.fitness}clone(){let t=new r(this.length,this.rand_func);return t.copy(this),t}}e.Chromosome=r},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.EventEmitter=class{constructor(){this.handlers=new Map}on(t,e){this.handlers.has(t)?this.handlers.get(t).push(e):this.handlers.set(t,[e])}emit(t,e){if(this.handlers.has(t))for(const s of this.handlers.get(t))s.call(this,e)}bindEvent(t,e){t.on(e,t=>this.emit(e,t))}}},function(t,e,s){"use strict";function i(t,e,s){if(e===s)return;const i=t[e];t[e]=t[s],t[s]=i}Object.defineProperty(e,"__esModule",{value:!0}),e.partialQuickSort=function(t,e){return function t(e,s,n,o){const r=Math.floor((s+n)/2);if(s<n){const a=function(t,e,s,n){const o=t[e].getFitness();for(;s<=n;){for(;t[s].getFitness()>o;)s++;for(;t[n].getFitness()<o;)n--;s<=n&&(i(t,s,n),s++,n--)}return s}(e,r,s,n);t(e,s,a-1,o),a<o&&t(e,a,n,o)}}(t,0,t.length-1,e),t}}]);